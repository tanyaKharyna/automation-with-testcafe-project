"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDefaultCompilerOptions = exports.TYPESCRIPT_BLACKLISTED_OPTIONS = exports.TYPESCRIPT_COMPILER_NON_OVERRIDABLE_OPTIONS = exports.DEFAULT_TYPESCRIPT_COMPILER_OPTIONS = exports.DEFAULT_RETRY_TEST_PAGES = exports.DEFAULT_DEVELOPMENT_MODE = exports.DEFAULT_SOURCE_DIRECTORIES = exports.DEFAULT_CONCURRENCY_VALUE = exports.DEFAULT_APP_INIT_DELAY = exports.STATIC_CONTENT_CACHING_SETTINGS = exports.DEFAULT_SPEED_VALUE = exports.DEFAULT_TIMEOUT = void 0;
const customizable_compilers_1 = __importDefault(require("./customizable-compilers"));
exports.DEFAULT_TIMEOUT = {
    selector: 10000,
    assertion: 3000,
    pageLoad: 3000
};
exports.DEFAULT_SPEED_VALUE = 1;
exports.STATIC_CONTENT_CACHING_SETTINGS = {
    maxAge: 3600,
    mustRevalidate: false
};
exports.DEFAULT_APP_INIT_DELAY = 1000;
exports.DEFAULT_CONCURRENCY_VALUE = 1;
exports.DEFAULT_SOURCE_DIRECTORIES = ['tests', 'test'];
exports.DEFAULT_DEVELOPMENT_MODE = false;
exports.DEFAULT_RETRY_TEST_PAGES = false;
exports.DEFAULT_TYPESCRIPT_COMPILER_OPTIONS = {
    experimentalDecorators: true,
    emitDecoratorMetadata: true,
    allowJs: true,
    pretty: true,
    inlineSourceMap: true,
    noImplicitAny: false,
    module: 1 /* ts.ModuleKind.CommonJS */,
    moduleResolution: 2 /* ts.ModuleResolutionKind.Node */,
    target: 3 /* ts.ScriptTarget.ES2016 */,
    jsx: 2 /* ts.JsxEmit.React */,
    suppressOutputPathCheck: true,
    skipLibCheck: true
};
exports.TYPESCRIPT_COMPILER_NON_OVERRIDABLE_OPTIONS = ['module', 'moduleResolution', 'target'];
exports.TYPESCRIPT_BLACKLISTED_OPTIONS = [
    'incremental',
    'tsBuildInfoFile',
    'emitDeclarationOnly',
    'declarationMap',
    'declarationDir',
    'composite',
    'outFile',
    'out'
];
const DEFAULT_COMPILER_OPTIONS = {
    [customizable_compilers_1.default.typescript]: {}
};
function getDefaultCompilerOptions() {
    // NOTE: Return the copy of the constant to prevent the modification of object properties
    return Object.assign({}, DEFAULT_COMPILER_OPTIONS);
}
exports.getDefaultCompilerOptions = getDefaultCompilerOptions;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC12YWx1ZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29uZmlndXJhdGlvbi9kZWZhdWx0LXZhbHVlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxzRkFBNkQ7QUFFaEQsUUFBQSxlQUFlLEdBQUc7SUFDM0IsUUFBUSxFQUFHLEtBQUs7SUFDaEIsU0FBUyxFQUFFLElBQUk7SUFDZixRQUFRLEVBQUcsSUFBSTtDQUNsQixDQUFDO0FBRVcsUUFBQSxtQkFBbUIsR0FBRyxDQUFDLENBQUM7QUFFeEIsUUFBQSwrQkFBK0IsR0FBZ0M7SUFDeEUsTUFBTSxFQUFVLElBQUk7SUFDcEIsY0FBYyxFQUFFLEtBQUs7Q0FDeEIsQ0FBQztBQUVXLFFBQUEsc0JBQXNCLEdBQUcsSUFBSSxDQUFDO0FBRTlCLFFBQUEseUJBQXlCLEdBQUcsQ0FBQyxDQUFDO0FBRTlCLFFBQUEsMEJBQTBCLEdBQUcsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFFL0MsUUFBQSx3QkFBd0IsR0FBRyxLQUFLLENBQUM7QUFDakMsUUFBQSx3QkFBd0IsR0FBRyxLQUFLLENBQUM7QUFFakMsUUFBQSxtQ0FBbUMsR0FBaUM7SUFDN0Usc0JBQXNCLEVBQUcsSUFBSTtJQUM3QixxQkFBcUIsRUFBSSxJQUFJO0lBQzdCLE9BQU8sRUFBa0IsSUFBSTtJQUM3QixNQUFNLEVBQW1CLElBQUk7SUFDN0IsZUFBZSxFQUFVLElBQUk7SUFDN0IsYUFBYSxFQUFZLEtBQUs7SUFDOUIsTUFBTSxFQUFtQixDQUFDLENBQUMsNEJBQTRCO0lBQ3ZELGdCQUFnQixFQUFTLENBQUMsQ0FBQyxrQ0FBa0M7SUFDN0QsTUFBTSxFQUFtQixDQUFDLENBQUMsNEJBQTRCO0lBQ3ZELEdBQUcsRUFBc0IsQ0FBQyxDQUFDLHNCQUFzQjtJQUNqRCx1QkFBdUIsRUFBRSxJQUFJO0lBQzdCLFlBQVksRUFBYSxJQUFJO0NBQ2hDLENBQUM7QUFFVyxRQUFBLDJDQUEyQyxHQUFHLENBQUMsUUFBUSxFQUFFLGtCQUFrQixFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBRXZGLFFBQUEsOEJBQThCLEdBQUc7SUFDMUMsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixXQUFXO0lBQ1gsU0FBUztJQUNULEtBQUs7Q0FDUixDQUFDO0FBRUYsTUFBTSx3QkFBd0IsR0FBRztJQUM3QixDQUFDLGdDQUFxQixDQUFDLFVBQVUsQ0FBQyxFQUFFLEVBQUU7Q0FDekMsQ0FBQztBQUVGLFNBQWdCLHlCQUF5QjtJQUNyQyx5RkFBeUY7SUFDekYsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSx3QkFBd0IsQ0FBQyxDQUFDO0FBQ3ZELENBQUM7QUFIRCw4REFHQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpY3Rpb25hcnksIFN0YXRpY0NvbnRlbnRDYWNoaW5nT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgQ3VzdG9taXphYmxlQ29tcGlsZXJzIGZyb20gJy4vY3VzdG9taXphYmxlLWNvbXBpbGVycyc7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1RJTUVPVVQgPSB7XG4gICAgc2VsZWN0b3I6ICAxMDAwMCxcbiAgICBhc3NlcnRpb246IDMwMDAsXG4gICAgcGFnZUxvYWQ6ICAzMDAwXG59O1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9TUEVFRF9WQUxVRSA9IDE7XG5cbmV4cG9ydCBjb25zdCBTVEFUSUNfQ09OVEVOVF9DQUNISU5HX1NFVFRJTkdTOiBTdGF0aWNDb250ZW50Q2FjaGluZ09wdGlvbnMgPSB7XG4gICAgbWF4QWdlOiAgICAgICAgIDM2MDAsXG4gICAgbXVzdFJldmFsaWRhdGU6IGZhbHNlXG59O1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9BUFBfSU5JVF9ERUxBWSA9IDEwMDA7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX0NPTkNVUlJFTkNZX1ZBTFVFID0gMTtcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfU09VUkNFX0RJUkVDVE9SSUVTID0gWyd0ZXN0cycsICd0ZXN0J107XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX0RFVkVMT1BNRU5UX01PREUgPSBmYWxzZTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1JFVFJZX1RFU1RfUEFHRVMgPSBmYWxzZTtcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfVFlQRVNDUklQVF9DT01QSUxFUl9PUFRJT05TOiBEaWN0aW9uYXJ5PGJvb2xlYW4gfCBudW1iZXI+ID0ge1xuICAgIGV4cGVyaW1lbnRhbERlY29yYXRvcnM6ICB0cnVlLFxuICAgIGVtaXREZWNvcmF0b3JNZXRhZGF0YTogICB0cnVlLFxuICAgIGFsbG93SnM6ICAgICAgICAgICAgICAgICB0cnVlLFxuICAgIHByZXR0eTogICAgICAgICAgICAgICAgICB0cnVlLFxuICAgIGlubGluZVNvdXJjZU1hcDogICAgICAgICB0cnVlLFxuICAgIG5vSW1wbGljaXRBbnk6ICAgICAgICAgICBmYWxzZSxcbiAgICBtb2R1bGU6ICAgICAgICAgICAgICAgICAgMSAvKiB0cy5Nb2R1bGVLaW5kLkNvbW1vbkpTICovLFxuICAgIG1vZHVsZVJlc29sdXRpb246ICAgICAgICAyIC8qIHRzLk1vZHVsZVJlc29sdXRpb25LaW5kLk5vZGUgKi8sXG4gICAgdGFyZ2V0OiAgICAgICAgICAgICAgICAgIDMgLyogdHMuU2NyaXB0VGFyZ2V0LkVTMjAxNiAqLyxcbiAgICBqc3g6ICAgICAgICAgICAgICAgICAgICAgMiAvKiB0cy5Kc3hFbWl0LlJlYWN0ICovLFxuICAgIHN1cHByZXNzT3V0cHV0UGF0aENoZWNrOiB0cnVlLFxuICAgIHNraXBMaWJDaGVjazogICAgICAgICAgICB0cnVlXG59O1xuXG5leHBvcnQgY29uc3QgVFlQRVNDUklQVF9DT01QSUxFUl9OT05fT1ZFUlJJREFCTEVfT1BUSU9OUyA9IFsnbW9kdWxlJywgJ21vZHVsZVJlc29sdXRpb24nLCAndGFyZ2V0J107XG5cbmV4cG9ydCBjb25zdCBUWVBFU0NSSVBUX0JMQUNLTElTVEVEX09QVElPTlMgPSBbXG4gICAgJ2luY3JlbWVudGFsJyxcbiAgICAndHNCdWlsZEluZm9GaWxlJyxcbiAgICAnZW1pdERlY2xhcmF0aW9uT25seScsXG4gICAgJ2RlY2xhcmF0aW9uTWFwJyxcbiAgICAnZGVjbGFyYXRpb25EaXInLFxuICAgICdjb21wb3NpdGUnLFxuICAgICdvdXRGaWxlJyxcbiAgICAnb3V0J1xuXTtcblxuY29uc3QgREVGQVVMVF9DT01QSUxFUl9PUFRJT05TID0ge1xuICAgIFtDdXN0b21pemFibGVDb21waWxlcnMudHlwZXNjcmlwdF06IHt9XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdENvbXBpbGVyT3B0aW9ucyAoKTogb2JqZWN0IHtcbiAgICAvLyBOT1RFOiBSZXR1cm4gdGhlIGNvcHkgb2YgdGhlIGNvbnN0YW50IHRvIHByZXZlbnQgdGhlIG1vZGlmaWNhdGlvbiBvZiBvYmplY3QgcHJvcGVydGllc1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX0NPTVBJTEVSX09QVElPTlMpO1xufVxuIl19